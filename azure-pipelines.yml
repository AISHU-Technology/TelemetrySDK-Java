
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# 触发管道
trigger:
  batch: true
  branches:
    include:
      - "feature-*"
      - "feature/*"
      - "develop"
      - "release-*"
      - "release/*"

variables:
  - group: anyrobot-global-config
  - name: BUILD_IMAGE
    value: "docker pull acr.aishu.cn/public/maven:1.1"
  - name: SONARQUBE_IMAGE
    value: "acr.aishu.cn/public/sonarsource/sonar-scanner-cli:4.8"
  - name: LintReportName # 此行保持一致
    value: jacoco.xml
  - name: UTReportName # 此行保持一致
    value: ut_report.xml
  - name: CoverageReportName # 此行保持一致
    value: coverage_report.xml

resources:
  containers:
    - container: dotnet
      endpoint: acr-registry
      image: dotnet/runtime:3.1-bullseye-slim

stages:
  - stage: CodeCheck
    displayName: 代码检查
    jobs:
      - job: _1CodeCheck
        displayName: 1.代码检查(UT/Lint)
        workspace:
          clean: all
        pool:
          name: telemetrySDK-pool
          demands:
            - docker
        steps:
          - checkout: self
          - task: Bash@3
            displayName: 单元测试
            inputs:
              targetType: 'inline'
              script: |
                #!/usr/bin/env bash
                set -ex

                docker run --rm \
                      -v $(pwd):/TelemetrySDK-Java \
                      $(BUILD_IMAGE) bash -c "
                  cd /TelemetrySDK-Java/exporter/common
                  mvn clean install assembly:assembly
                  cd /TelemetrySDK-Java/sdk
                  mvn clean install assembly:assembly
                  "
